import { Observable } from 'rxjs/Rx';
import { Constants } from '../_models/index';
import { MockQuestionData } from '../_mocks/index.mock';
import { Subject } from 'rxjs/Subject';

export class MockQuestionService {

    Search(): Observable<any> {
        let questionData = new MockQuestionData().MockQuestionSummaryData();
        return Observable.of(questionData);
    }

    getQuestionsOnSearch(searchArray: any): Observable<any> {
        let result = [];
        if (searchArray == 'fav') {
            result = [{ 'DemoCode': 'CFP', 'QuestionText': 'chelsea favorite player' }, { 'DemoCode': 'CRI', 'QuestionText': 'Favorite cricket team' }, { 'DemoCode': 'SPT', 'QuestionText': 'Which is your favorite sport' }, { 'DemoCode': 'TOU', 'QuestionText': 'Which is your favorite tourist spot' }];
        }
        return Observable.of(result);
    }

    ViewDemoCode(demoCode: string, userId: string, userName: string): Observable<any> {
        let result = { 'DemoCode': { 'Code': 'GEN', 'QuestionText': 'Which is your favorite Genre', 'AnswerId': 1, 'AnswerType': 'Single Option', 'AnsweredQuestionText': 'Fav Denre is', 'IsCDBModel': false, 'QuestionIdentifier': 'FavGen', 'RecentAnswerCount': 2, 'StatusId': 4, 'CreatedBy': 'user1', 'CreatedDate': '2017-11-06T05:30:58.377Z', 'UpdatedBy': null, 'UpdatedDate': null, 'Status': 'ACTIVE' }, 'DemoOffers': [{ 'DemoCode': 'GEN', 'DemoOfferCode': 'GENA', 'ScheduleDate': '2017-11-07T18:30:00Z', 'ApprovedDate': '2017-11-08T05:35:20.647Z', 'LastPublishDate': '2017-11-08T05:35:20.647Z', 'StatusId': 7, 'Status': 'ACTIVE-IN EDIT', 'MinValue': null, 'MaxValue': null, 'Interval': null, 'MinDate': null, 'MaxDate': null, 'PremiumOffer': 'MSDDEXC2', 'DigitalOffer': null, 'ControlType': 'Radio Button', 'SourceType': 'E', 'RecordType': 'P', 'CreatedBy': 'user1', 'UpdatedBy': 'user1', 'CreatedDate': '2017-11-06T05:32:11.513Z', 'UpdatedDate': '2017-12-18T11:21:15.533Z', 'PreviousStatusId': 4, 'PreviousStatus': 'ACTIVE', 'SubmittedGroupId': 28, 'DemoOffer_Choice': [{ 'DemoChoiceId': 1280, 'DemoCode': 'GEN', 'DemoChoiceCode': 'COM', 'DemoChoiceText': 'Comedy-changed', 'DemoOfferChoiceId': 1280, 'SortOrder': 1 }], 'DisplayText': null }, { 'DemoCode': 'GEN', 'DemoOfferCode': 'GENB', 'ScheduleDate': '2017-11-05T18:30:00Z', 'ApprovedDate': '2017-11-06T01:26:07.95Z', 'LastPublishDate': '2017-11-06T01:26:07.95Z', 'StatusId': 7, 'Status': 'ACTIVE-IN EDIT', 'MinValue': null, 'MaxValue': null, 'Interval': null, 'MinDate': null, 'MaxDate': null, 'PremiumOffer': null, 'DigitalOffer': null, 'ControlType': 'Dropdown', 'SourceType': 'E', 'RecordType': 'S', 'CreatedBy': 'user1', 'UpdatedBy': 'user1', 'CreatedDate': '2017-11-06T06:14:32.773Z', 'UpdatedDate': '2017-12-11T13:24:56.87Z', 'PreviousStatusId': 4, 'PreviousStatus': 'ACTIVE', 'SubmittedGroupId': 20, 'DemoOffer_Choice': [{ 'DemoChoiceId': 1280, 'DemoCode': 'GEN', 'DemoChoiceCode': 'COM', 'DemoChoiceText': 'Comedy-changed', 'DemoOfferChoiceId': 1281, 'SortOrder': 1 }, { 'DemoChoiceId': 1281, 'DemoCode': 'GEN', 'DemoChoiceCode': 'HOR', 'DemoChoiceText': 'Horror', 'DemoOfferChoiceId': 1282, 'SortOrder': 2 }, { 'DemoChoiceId': 1282, 'DemoCode': 'GEN', 'DemoChoiceCode': 'SCI', 'DemoChoiceText': 'Sci-Fic', 'DemoOfferChoiceId': 1283, 'SortOrder': 3 }], 'DisplayText': null }], 'ChainOffers': { 'ForcedChainOffers': [], 'ChoiceChainOffers': [{ 'ParentDemoOfferCode': 'GENA', 'QuestionText': 'Which is your favorite Genre', 'Mag_Code': 'EW', 'MagazineName': 'Entertainment Weekly', 'ChildOfferQuestionText': 'Test in IE Browser - Single Option', 'ChildDemoCode': 'IES', 'ChoiceChainOffers': [{ 'ParentDemoChoiceCode': 'COM', 'ParentDemoChoiceText': 'Comedy-changed', 'ParentDemoOfferChoiceId': 1280, 'ChildDemoChoiceCode': 'E5', 'ChildDemoCHoiceText': 'Explorer 5', 'ChildDemoChoiceId': 2565 }] }] }, 'Magazine': [{ 'DemoOfferCode': 'GENA', 'DemoOfferChannel': [{ 'DemoOfferChannelId': 359, 'DemoOfferCode': 'GENA', 'Mag_Code': 'EW', 'MagazineName': 'Entertainment Weekly', 'ChannelId': 1, 'IsVisible': false, 'SortOrder': 1, 'IsPublished': false, 'UpdatedBy': 'user1', 'UpdatedDate': '2017-11-06T06:16:50.07Z', 'ChannelName': 'Customer Service Portal', 'ChannelCode': 'CSP' }, { 'DemoOfferChannelId': 361, 'DemoOfferCode': 'GENA', 'Mag_Code': 'GF', 'MagazineName': 'Golf', 'ChannelId': 2, 'IsVisible': false, 'SortOrder': 2, 'IsPublished': false, 'UpdatedBy': 'user1', 'UpdatedDate': '2017-11-06T06:19:51.157Z', 'ChannelName': 'GreenScreen', 'ChannelCode': 'GS' }, { 'DemoOfferChannelId': 362, 'DemoOfferCode': 'GENA', 'Mag_Code': 'SI', 'MagazineName': 'Sports Illustrated', 'ChannelId': 4, 'IsVisible': false, 'SortOrder': 3, 'IsPublished': false, 'UpdatedBy': 'user1', 'UpdatedDate': '2017-11-06T06:19:51.157Z', 'ChannelName': 'Messenger', 'ChannelCode': 'MSGR' }] }, { 'DemoOfferCode': 'GENB', 'DemoOfferChannel': [{ 'DemoOfferChannelId': 360, 'DemoOfferCode': 'GENB', 'Mag_Code': 'GF', 'MagazineName': 'Golf', 'ChannelId': 1, 'IsVisible': true, 'SortOrder': 5, 'IsPublished': false, 'UpdatedBy': 'user1', 'UpdatedDate': '2017-11-06T06:16:50.07Z', 'ChannelName': 'Customer Service Portal', 'ChannelCode': 'CSP' }, { 'DemoOfferChannelId': 363, 'DemoOfferCode': 'GENB', 'Mag_Code': 'EW', 'MagazineName': 'Entertainment Weekly', 'ChannelId': 2, 'IsVisible': false, 'SortOrder': 2, 'IsPublished': false, 'UpdatedBy': 'user1', 'UpdatedDate': '2017-11-06T06:19:51.157Z', 'ChannelName': 'GreenScreen', 'ChannelCode': 'GS' }, { 'DemoOfferChannelId': 364, 'DemoOfferCode': 'GENB', 'Mag_Code': 'SI', 'MagazineName': 'Sports Illustrated', 'ChannelId': 3, 'IsVisible': false, 'SortOrder': 3, 'IsPublished': false, 'UpdatedBy': 'user1', 'UpdatedDate': '2017-11-06T06:19:51.157Z', 'ChannelName': 'Insert Card', 'ChannelCode': 'IC' }] }], 'Comments': [{ 'CommentId': 178, 'DemoCode': 'GEN', 'CommentText': 'Magazine Channels are modified for Demo Offer Code GENA.\nSchedule date modified against Demo Offer Code GENA.\nTest', 'CommentBy': 'User 1', 'UserName': 'user1', 'CommentDate': '2017-11-08T05:34:28.723Z' }, { 'CommentId': 164, 'DemoCode': 'GEN', 'CommentText': 'Approved', 'CommentBy': 'User 1', 'UserName': 'user1', 'CommentDate': '2017-11-06T01:22:44.397Z' }, { 'CommentId': 163, 'DemoCode': 'GEN', 'CommentText': 'Chain Offers are modified against Demo Offer GENA.\nMagazine Channels are associated for Demo Offer Code GENA.\nMagazine Channels are associated for Demo Offer Code GENB.\nNew Demo Offer Code GENA created.\nNew Demo Offer Code GENB created.\nAdded Comments', 'CommentBy': 'User 1', 'UserName': 'user1', 'CommentDate': '2017-11-06T01:21:33.523Z' }], 'IsLocked': false, 'LockedUserID': 'user2', 'LockedUserName': 'User 2' };
        return Observable.of(result);
    }

}

export class MockAnswerService {

}

